<?php


namespace App\Http\Requests\Ag;


use App\Exceptions\ValidateException;
use Illuminate\Contracts\Validation\Validator;
use Illuminate\Foundation\Http\FormRequest;

class BaseRequest extends FormRequest
{

    protected $scene;

    protected $message = [];

    protected $rule = [];

    public function __construct(array $query = [], array $request = [], array $attributes = [], array $cookies = [], array $files = [], array $server = [], $content = null)
    {
        $uri = request()->path();
        $path = explode("/",$uri);
        $this->scene = $path[count($path)-1];
        parent::__construct($query, $request, $attributes, $cookies, $files, $server, $content);
    }

    public function rules(): array
    {
        return $this->rule[$this->scene];
    }

    public function messages(): array
    {
        return $this->message[$this->scene];
    }

    public function failedValidation(Validator $validator)
    {
//        parent::failedValidation($validator); // TODO: Change the autogenerated stub
        throw new ValidateException($validator->errors()->first());
    }

}
